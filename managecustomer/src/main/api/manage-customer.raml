#%RAML 0.8
title: Customer API
baseUri: http://localhost:8081
version: v1

/customers:
  description: Manage customer
  post:
    description: Create new customer
    body: 
      application/json: 
        example: !include customer.sample
        schema: !include customer.schema
    responses: 
      201: 
        description: Success
        body: 
          application/json: 
            example: |
              { "message": "Customer has been created" }
      400:
          description: Request not valid 
          body: 
            application/json: 
              example: |
                { "message": "Bad request" }
                
  put:
      description: Update customer
      body: 
        application/json: 
          example: !include customer-update.sample
          schema: !include customer-update.schema
      responses: 
        200:
          description: Success 
          body: 
            application/json: 
              example: |
                { "message": "Customer has been updated" }
        400:
          description: Request not valid 
          body: 
            application/json: 
              example: |
                { "message": "Bad request" }
        
        404:
            description: When requested customer is not found
            body:
              application/json:
                example: |
                  {"message": "Resource not found" }
                  
  delete:
      description: |
          Delete the customer
          with customerId ={customerId}
      queryParameters:
        custmerId:
          description: Id of customer
          type: integer
          required: false
          example: 20
      responses: 
        200:
          description: Success 
          body: 
            application/json: 
              example: |
                { "message": "Customer has been deleted" }
         
        404:
          description: When requested customer is not found
          body:
            application/json:
              example: |
                {"message": "customer not found" }
  get:
    description: Get list of customer.
    queryParameters:
        custmerId:
          description: Id of customer
          type: integer
          required: false
          example: 20
        offset:
          description: Skipover number of elements by specifying an offset value for the query
          type: integer
          required: false
          example: 20
          default: 0
        limit:
          description: Limit the number of elements in the response
          type: integer
          required: false
          example: 80
          default: 10
          
    responses:
      200:
        description: Success
        body:
          application/json:
            example: !include customer-list.sample
      404: 
          description: When customer doesn't not exists
          body: 
            application/json: 
              example: |
                { "message": "No customer exists" }
              
  
    
    
    